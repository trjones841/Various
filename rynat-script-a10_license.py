#!/usr/bin/python###################################################################################### Python script to license vThunders directly from GLM (c) A10 Networks v1 11/8/17#     Questions & Comments Welcome. Ryan Treser <rtreser@a10networks.com>## Requires license pool to be created on GLM prior to script run# Need user email and password for an email listed under "Users with Access"# Entitlement token obtained from GLM, look under Overview tab of license# Enter FQDN or IP of vThunder, and usename+password#####################################################################################import requests, json, StringIO, getpassemail = 'rtreser@a10networks.com'glm_password = getpass.getpass('GLM Password:')lic_token = "vTh6716f1dd0"thunder_host = '52.176.62.177'thunder_user = 'admin'thunder_password = getpass.getpass('A10 Password:')#Authenticate in to appliancecred = """  {	"credentials": {		"username": "%s", 		"password": "%s"	}  }""" % (thunder_user, thunder_password)json_header = {'Content-Type': 'application/json'}r = requests.post('https://' + thunder_host + '/axapi/v3/auth', data=cred, headers=json_header, verify=False)content = r.contentparsed_json = json.loads(content)token = parsed_json['authresponse']['signature']sessionID = 'A10 %s' % token#Obtain UUIDth_headers = {'Content-type': 'application/json','Authorization': sessionID}r = requests.get('https://' + thunder_host + '/axapi/v3/file/license/oper', headers=th_headers, verify=False)content = r.contentparsed_json = json.loads(content)uuid = parsed_json['license']['oper']['host-id']# Authenticate to GLMvalues = """  {    "user": {      "email": "%s",      "password": "%s"    }  }""" % (email, glm_password)r = requests.post('https://glm.a10networks.com/users/sign_in.json', headers=json_header, data=values, verify=False)content = r.contentparsed_json = json.loads(content)user_token = parsed_json['user_token']#Common headers for each requestglm_headers = {  'Content-Type': 'application/json',  'X-User-Email': email,  'X-User-Token': user_token}#Activate an appliancevalues = """  {    "activation": {      "appliance_uuid": "%s",      "token": "%s",      "version": "4.1 or newer"    }  }""" % (uuid, lic_token)r = requests.post('https://glm.a10networks.com/activations.json', headers=glm_headers, data=values, verify=False)content = r.contentparsed_json = json.loads(content)for i in parsed_json:	if i['appliance_uuid'] == uuid:		key = i['key']# To keep key internal to script, use below block#######################key_file = StringIO.StringIO(key)files = {'file': ('my.lic', key_file.getvalue())}######################## To write a file, then read later, use below block########################k = open("a10.lic", "w")#k.write(key)#k.close()#files = {'file': ('my.lic',open('a10.lic', 'rb')) }#######################		#Apply license and reload (if necessary)values = {	"glm-license": {		"action" : "import",		"file" : "license",		"file-handle" : "my.lic"	}  }file_headers = {'Authorization': sessionID}data = {'json': json.dumps(values)}r = requests.post('https://' + thunder_host + '/axapi/v3/file/glm-license', headers=file_headers, files=files, data=data, verify=False)status = r.status_codecontent = r.content# If applying a CFW license, need to reload, uncomment below##############################################################parsed_json = json.loads(content)#result = parsed_json['response']['msg']#if result == "Done":#       r = requests.post('https://' + thunder_host + '/axapi/v3/reload', headers=th_headers, verify=False)#############################################################